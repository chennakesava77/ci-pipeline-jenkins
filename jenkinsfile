pipeline {
    agent any

    environment {
        NODE_ENV = 'development'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/yourusername/your-repo.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                // Clean install for CI environments
                sh 'npm ci'
            }
        }

        stage('Run Tests') {
            steps {
                // Run unit tests
                sh 'npm test'
            }
            post {
                always {
                    // Capture test reports if Jest configured to output XML
                    junit '**/tests/**/*.xml'
                }
            }
        }

        stage('Build') {
            steps {
                // Use npm build script if exists, fallback to copy src
                script {
                    if (fileExists('package.json')) {
                        sh 'npm run build || mkdir -p build && cp -r src/* build/'
                    } else {
                        sh 'mkdir -p build && cp -r src/* build/'
                    }
                }
            }
        }

        stage('Archive Artifacts') {
            steps {
                archiveArtifacts artifacts: 'build/**', fingerprint: true
            }
        }
    }

    post {
        success {
            echo '‚úÖ Build Successful!'
        }
        failure {
            echo '‚ùå Build Failed!'
        }
        always {
            echo 'üîî Pipeline finished.'
        }
    }
}
